import Head from 'next/head'
import { useEffect, useState } from 'react';
import { Country } from './interface/Country';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faMoon, faSun, faMagnifyingGlass, faChevronDown } from '@fortawesome/free-solid-svg-icons';
import styles from '../styles/Home.module.css'

export default function Home() {
  const [countries, setCountries] = useState<Country[] | []>([])
  const [showFilter, setShowFilter] = useState<boolean>(false)

  // Getting all the data from the REST Countries API
  useEffect(() => {
    const fetchTodos = async () => {
      const response = await fetch("/api/countries", {
        method: 'POST',
        body: JSON.stringify({ url: `/v3.1/all` })
      })
      const data = await response.json();
      setCountries(data)
    };
    fetchTodos().catch(console.error)
  }, [])

  const filterByRegion = async (region: string) => {
    const response = await fetch("/api/countries", {
      method: 'POST',
      body: JSON.stringify({ url: `/v3.1/region/${region}` })
    })
    const data = await response.json();
    setCountries(data)
  }

  return (
    <div style={{ backgroundColor: '#F2F2F2' }}>
      <Head>
        <title>REST Countries API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
      </Head>

      {/* 
        Header to change the light/dark mode.
      */}
      <header>
        <h1>Where in the world?</h1>
        <div className={styles.darkMode}>
          <FontAwesomeIcon icon={faMoon} fixedWidth />
          <p>Dark Mode</p>
        </div>
      </header>

      {/* 
        Display the countries
      */}
      <main className={styles.container}>

        {/* 
          Filter header
        */}
        <div className={styles.filterBox}>
          <div className={styles.searchbar}>
            <FontAwesomeIcon icon={faMagnifyingGlass} fixedWidth />
            <input type="text" placeholder='Search for a country...' />
          </div>
          <div className={styles.dropdown}>
            <div className={styles.filter} onClick={() => setShowFilter(!showFilter)}>
              <p>Filter by Region</p>
              <FontAwesomeIcon icon={faChevronDown} fixedWidth />
            </div>
            {
              showFilter ?
                <div className={styles.dropdownContent}>
                  <span onClick={() => filterByRegion('Africa')}>Africa</span>
                  <span onClick={() => filterByRegion('Americas')}>Americas</span>
                  <span onClick={() => filterByRegion('Asia')}>Asia</span>
                  <span onClick={() => filterByRegion('Europe')}>Europe</span>
                  <span onClick={() => filterByRegion('Oceania')}>Oceania</span>
                </div> : null
            }
          </div>
        </div>

        {/* 
          Cards
        */}
        <div className={styles.cardContainer}>
          {
            countries.map((item: Country, index: number) => {
              return <div className={styles.card} key={index}>
                <img src={item.flags.png} alt="flag" width={'100%'} height={'50%'} />
                <div className={styles.text}>
                  <h3>{item.name.official}</h3>
                  <p><span>Population:</span> {item.population.toLocaleString('en-us')}</p>
                  <p><span>Region:</span> {item.region}</p>
                  <p><span>Capital:</span> {item.capital}</p>
                </div>
              </div>
            })
          }
        </div>
      </main>
    </div>
  )
}
